id: https://open-and-sustainable.github.io/revaise-model/schema/objects/slots
name: revaise_slots
description: "Common slots for RevAIse objects."
imports:
  - linkml:types
slots:
  id: {identifier: true, range: string, description: "Unique identifier."}
  title: {range: string, description: "Title or label."}
  protocol: {description: "Protocol information."}
  providers: {description: "Registered AI providers."}
  models: {description: "AI models associated."}
  prompts: {description: "Prompts defined for reuse."}
  stages: {description: "Stages executed."}
  artifacts: {description: "Artifacts produced or used."}
  software_env: {description: "Reproducible software environment."}
  contributors: {description: "Contributors involved."}
  created_at: {range: datetime, description: "Creation timestamp."}
  updated_at: {range: datetime, description: "Last update timestamp."}

  registry: {range: string, description: "Registry where the protocol is recorded."}
  registration_id: {range: string, description: "Identifier assigned by the registry."}
  registration_url: {range: uri, description: "URL to the registry entry."}
  research_question: {range: string, description: "Primary research question."}
  eligibility_criteria: {range: string, description: "Inclusion and exclusion criteria."}
  picos: {range: string, description: "Population, Intervention, Comparison, Outcomes, Study design details."}
  start_date: {range: date, description: "Review start date."}

  stage_type: {description: "Type of stage executed."}
  label: {range: string, description: "Human-readable label."}
  description: {range: string, description: "Detailed description."}
  started_at: {range: datetime, description: "Start time."}
  ended_at: {range: datetime, description: "End time."}
  inputs: {description: "Artifacts serving as inputs."}
  datasets: {description: "Datasets referenced."}
  ai_uses: {description: "AI uses within this stage."}
  human_in_loop: {description: "Human oversight details."}
  decisions: {description: "Decisions made."}
  outputs: {description: "Outputs produced."}
  metrics: {description: "Metrics collected."}
  cost: {range: float, description: "Estimated cost."}

  role: {range: string, description: "Functional role of the AI model."}
  task: {range: string, description: "Task performed by the AI."}
  model_id: {range: string, description: "Identifier of the model used."}
  provider_id: {range: string, description: "Identifier of the model provider."}
  prompt_ids: {description: "Prompts referenced by this use."}
  parameters: {description: "Model parameters applied."}
  tools_used: {description: "Tools available to the model."}
  tool_calls: {description: "Tool invocations performed."}
  training_data: {description: "Datasets used for training or fine-tuning."}
  evaluation: {description: "Evaluation metrics for this use."}
  safety_notes: {range: string, description: "Safety considerations."}
  seed: {range: integer, description: "Random seed for reproducibility."}
  context_window: {range: integer, description: "Maximum context window size."}

  prompt_id: {range: string, description: "Identifier for the prompt."}
  template: {range: string, description: "Template text of the prompt."}
  variables: {range: string, description: "Variables interpolated into the prompt."}
  rendered: {range: string, description: "Rendered prompt text."}

  temperature: {range: float, description: "Sampling temperature."}
  top_p: {range: float, description: "Top-p nucleus sampling value."}
  max_tokens: {range: integer, description: "Maximum number of tokens to generate."}
  frequency_penalty: {range: float, description: "Frequency penalty parameter."}
  presence_penalty: {range: float, description: "Presence penalty parameter."}
  stop: {range: string, description: "Stop sequences for generation."}

  name: {range: string, description: "Name."}
  version: {range: string, description: "Version."}
  resource_uri: {range: uri, description: "Canonical URI locating the resource."}
  tool_name: {range: string, description: "Name of the invoked tool."}
  arguments_json: {range: string, description: "JSON-encoded call arguments."}
  outputs_json: {range: string, description: "JSON-encoded tool outputs."}

  url: {range: uri, description: "Homepage or endpoint."}
  terms_of_use: {range: string, description: "Terms of service or use."}
  card_uri: {range: uri, description: "URI to the model card."}
  modality: {range: string, description: "Input/output modality."}

  kind: {description: "Kind or classification."}
  snapshot_hash: {range: string, description: "Checksum of the dataset snapshot."}
  license: {range: string, description: "License governing the dataset."}
  notes: {range: string, description: "Additional notes."}

  policy: {range: string, description: "Policy guiding human oversight."}
  reviewers: {description: "Agents serving as reviewers."}
  adjudication_rules: {range: string, description: "Rules for adjudicating disagreements."}

  item_id: {range: string, description: "Identifier of the item decided upon."}
  action: {range: string, description: "Decision action taken."}
  rationale: {range: string, description: "Justification for the decision."}
  agent: {description: "Agent responsible for the decision."}
  timestamp: {range: datetime, description: "Time the decision was made."}
  overridden_by: {range: string, description: "Identifier of any overriding decision."}

  prisma: {description: "PRISMA flow information."}
  synthesis: {description: "Synthesis results."}

  records_identified: {range: integer, description: "Records identified through searching."}
  duplicates_removed: {range: integer, description: "Duplicate records removed."}
  records_screened: {range: integer, description: "Records screened."}
  records_excluded: {range: integer, description: "Records excluded after screening."}
  reports_sought: {range: integer, description: "Reports sought for retrieval."}
  reports_not_retrieved: {range: integer, description: "Reports not retrieved."}
  reports_assessed: {range: integer, description: "Reports assessed for eligibility."}
  studies_included: {range: integer, description: "Studies included in synthesis."}

  synthesis_type: {description: "Type of synthesis performed."}
  effect_model: {range: string, description: "Statistical model used."}
  effect_size: {range: float, description: "Estimated effect size."}
  ci_low: {range: float, description: "Lower bound of confidence interval."}
  ci_high: {range: float, description: "Upper bound of confidence interval."}
  heterogeneity_i2: {range: float, description: "IÂ² heterogeneity statistic."}
  tau2: {range: float, description: "Between-study variance."}
  k_studies: {range: integer, description: "Number of studies included."}
  subgroup_notes: {range: string, description: "Notes on subgroup analyses."}
  narrative_summary: {range: string, description: "Narrative summary of findings."}

  value: {range: float, description: "Metric value."}
  split: {range: string, description: "Dataset split the metric applies to."}
  threshold: {range: float, description: "Threshold applied for evaluation."}

  format: {range: string, description: "File format or serialization."}
  checksum: {range: string, description: "Checksum of the artifact."}

  os: {range: string, description: "Operating system description."}
  containers: {description: "Container images used."}
  lockfiles: {description: "Environment lockfiles."}
  hardware: {range: string, description: "Hardware specifications."}

  orcid: {range: string, description: "ORCID identifier for the agent."}
  email: {range: string, description: "Contact email for the agent."}
